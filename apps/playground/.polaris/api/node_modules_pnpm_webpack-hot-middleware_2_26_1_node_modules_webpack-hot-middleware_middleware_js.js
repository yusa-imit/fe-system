/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "node_modules_pnpm_webpack-hot-middleware_2_26_1_node_modules_webpack-hot-middleware_middleware_js";
exports.ids = ["node_modules_pnpm_webpack-hot-middleware_2_26_1_node_modules_webpack-hot-middleware_middleware_js"];
exports.modules = {

/***/ "../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/helpers.js":
/*!*************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/helpers.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var parse = (__webpack_require__(/*! url */ \"url\").parse);\n\nexports.pathMatch = function (url, path) {\n  try {\n    return parse(url).pathname === path;\n  } catch (e) {\n    return false;\n  }\n};\n\n\n//# sourceURL=webpack://playground/../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/helpers.js?");

/***/ }),

/***/ "../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/middleware.js":
/*!****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/middleware.js ***!
  \****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = webpackHotMiddleware;\n\nvar helpers = __webpack_require__(/*! ./helpers */ \"../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/helpers.js\");\nvar pathMatch = helpers.pathMatch;\n\nfunction webpackHotMiddleware(compiler, opts) {\n  opts = opts || {};\n  opts.log =\n    typeof opts.log == 'undefined' ? console.log.bind(console) : opts.log;\n  opts.path = opts.path || '/__webpack_hmr';\n  opts.heartbeat = opts.heartbeat || 10 * 1000;\n  opts.statsOptions =\n    typeof opts.statsOptions == 'undefined' ? {} : opts.statsOptions;\n\n  var eventStream = createEventStream(opts.heartbeat);\n  var latestStats = null;\n  var closed = false;\n\n  if (compiler.hooks) {\n    compiler.hooks.invalid.tap('webpack-hot-middleware', onInvalid);\n    compiler.hooks.done.tap('webpack-hot-middleware', onDone);\n  } else {\n    compiler.plugin('invalid', onInvalid);\n    compiler.plugin('done', onDone);\n  }\n  function onInvalid() {\n    if (closed) return;\n    latestStats = null;\n    if (opts.log) opts.log('webpack building...');\n    eventStream.publish({ action: 'building' });\n  }\n  function onDone(statsResult) {\n    if (closed) return;\n    // Keep hold of latest stats so they can be propagated to new clients\n    latestStats = statsResult;\n    publishStats(\n      'built',\n      latestStats,\n      eventStream,\n      opts.log,\n      opts.statsOptions\n    );\n  }\n  var middleware = function (req, res, next) {\n    if (closed) return next();\n    if (!pathMatch(req.url, opts.path)) return next();\n    eventStream.handler(req, res);\n    if (latestStats) {\n      // Explicitly not passing in `log` fn as we don't want to log again on\n      // the server\n      publishStats('sync', latestStats, eventStream, false, opts.statsOptions);\n    }\n  };\n  middleware.publish = function (payload) {\n    if (closed) return;\n    eventStream.publish(payload);\n  };\n  middleware.close = function () {\n    if (closed) return;\n    // Can't remove compiler plugins, so we just set a flag and noop if closed\n    // https://github.com/webpack/tapable/issues/32#issuecomment-350644466\n    closed = true;\n    eventStream.close();\n    eventStream = null;\n  };\n  return middleware;\n}\n\nfunction createEventStream(heartbeat) {\n  var clientId = 0;\n  var clients = {};\n  function everyClient(fn) {\n    Object.keys(clients).forEach(function (id) {\n      fn(clients[id]);\n    });\n  }\n  var interval = setInterval(function heartbeatTick() {\n    everyClient(function (client) {\n      client.write('data: \\uD83D\\uDC93\\n\\n');\n    });\n  }, heartbeat).unref();\n  return {\n    close: function () {\n      clearInterval(interval);\n      everyClient(function (client) {\n        if (!client.finished) client.end();\n      });\n      clients = {};\n    },\n    handler: function (req, res) {\n      var headers = {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'text/event-stream;charset=utf-8',\n        'Cache-Control': 'no-cache, no-transform',\n        // While behind nginx, event stream should not be buffered:\n        // http://nginx.org/docs/http/ngx_http_proxy_module.html#proxy_buffering\n        'X-Accel-Buffering': 'no',\n      };\n\n      var isHttp1 = !(parseInt(req.httpVersion) >= 2);\n      if (isHttp1) {\n        req.socket.setKeepAlive(true);\n        Object.assign(headers, {\n          Connection: 'keep-alive',\n        });\n      }\n\n      res.writeHead(200, headers);\n      res.write('\\n');\n      var id = clientId++;\n      clients[id] = res;\n      req.on('close', function () {\n        if (!res.finished) res.end();\n        delete clients[id];\n      });\n    },\n    publish: function (payload) {\n      everyClient(function (client) {\n        client.write('data: ' + JSON.stringify(payload) + '\\n\\n');\n      });\n    },\n  };\n}\n\nfunction publishStats(action, statsResult, eventStream, log, statsOptions) {\n  var resultStatsOptions = Object.assign(\n    {\n      all: false,\n      cached: true,\n      children: true,\n      modules: true,\n      timings: true,\n      hash: true,\n      errors: true,\n      warnings: true,\n    },\n    statsOptions\n  );\n\n  var bundles = [];\n\n  // multi-compiler stats have stats for each child compiler\n  // see https://github.com/webpack/webpack/blob/main/lib/MultiCompiler.js#L97\n  if (statsResult.stats) {\n    var processed = statsResult.stats.map(function (stats) {\n      return extractBundles(normalizeStats(stats, resultStatsOptions));\n    });\n\n    bundles = processed.flat();\n  } else {\n    bundles = extractBundles(normalizeStats(statsResult, resultStatsOptions));\n  }\n\n  bundles.forEach(function (stats) {\n    var name = stats.name || '';\n\n    // Fallback to compilation name in case of 1 bundle (if it exists)\n    if (!name && stats.compilation) {\n      name = stats.compilation.name || '';\n    }\n\n    if (log) {\n      log(\n        'webpack built ' +\n          (name ? name + ' ' : '') +\n          stats.hash +\n          ' in ' +\n          stats.time +\n          'ms'\n      );\n    }\n\n    eventStream.publish({\n      name: name,\n      action: action,\n      time: stats.time,\n      hash: stats.hash,\n      warnings: formatErrors(stats.warnings || []),\n      errors: formatErrors(stats.errors || []),\n      modules: buildModuleMap(stats.modules),\n    });\n  });\n}\n\nfunction formatErrors(errors) {\n  if (!errors || !errors.length) {\n    return [];\n  }\n\n  if (typeof errors[0] === 'string') {\n    return errors;\n  }\n\n  // Convert webpack@5 error info into a backwards-compatible flat string\n  return errors.map(function (error) {\n    var moduleName = error.moduleName || '';\n    var loc = error.loc || '';\n    return moduleName + ' ' + loc + '\\n' + error.message;\n  });\n}\n\nfunction normalizeStats(stats, statsOptions) {\n  var statsJson = stats.toJson(statsOptions);\n\n  if (stats.compilation) {\n    // webpack 5 has the compilation property directly on stats object\n    Object.assign(statsJson, {\n      compilation: stats.compilation,\n    });\n  }\n\n  return statsJson;\n}\n\nfunction extractBundles(stats) {\n  // Stats has modules, single bundle\n  if (stats.modules) return [stats];\n\n  // Stats has children, multiple bundles\n  if (stats.children && stats.children.length) return stats.children;\n\n  // Not sure, assume single\n  return [stats];\n}\n\nfunction buildModuleMap(modules) {\n  var map = {};\n  modules.forEach(function (module) {\n    map[module.id] = module.name;\n  });\n  return map;\n}\n\n\n//# sourceURL=webpack://playground/../../node_modules/.pnpm/webpack-hot-middleware@2.26.1/node_modules/webpack-hot-middleware/middleware.js?");

/***/ })

};
;